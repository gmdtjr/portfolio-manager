"""
포트폴리오 정밀 진단기 모듈
포트폴리오의 구조적 강점과 약점을 진단하고 최적화 방안을 제시하는 Deep Research 프롬프트를 생성합니다.
"""

from datetime import datetime


class PortfolioDiagnosisGenerator:
    """포트폴리오 정밀 진단 프롬프트 생성기"""
    
    def __init__(self):
        """초기화"""
        pass
    
    def generate_diagnosis_prompt(self) -> str:
        """
        포트폴리오 정밀 진단을 위한 최적화된
        Deep Research 프롬프트를 생성합니다.
        
        Returns:
            str: 생성된 포트폴리오 진단 프롬프트
        """
        today = datetime.now().strftime('%Y년 %m월 %d일')
        
        # 마스터 프롬프트 템플릿
        master_prompt_template = f"""# 포트폴리오 스트레스 테스트 및 리스크 진단 보고서 ({today})

## **[중요 지시사항]**
- **역할 부여:** 당신은 포트폴리오의 숨겨진 취약점을 찾아내는 **'최고 리스크 책임자(Chief Risk Officer, CRO)'**입니다. 당신의 임무는 단순히 강점과 약점을 나열하는 것을 넘어, 이 포트폴리오가 미래의 예상치 못한 충격에 얼마나 잘 견딜 수 있는지 **스트레스 테스트(Stress Test)**를 수행하고, **가장 치명적인 단일 실패 지점(Single Point of Failure)**을 찾아내는 것입니다.
- **언어:** 모든 결과물은 반드시 **한글**로만 작성해주세요.

## **분석 목표:**
첨부된 2개의 포트폴리오 파일(`포트폴리오_현황.csv`, `투자_노트.csv`)을 바탕으로, 아래 '핵심 진단 항목'에 따라 포트폴리오에 대한 스트레스 테스트를 수행하고, 가장 시급하게 보완해야 할 취약점과 그에 대한 구체적인 리스크 관리 방안을 제시하시오.

## **핵심 진단 항목 (Stress Test Scenarios):**
*아래 4가지 항목에 대해, 각각의 최악의 시나리오를 가정하여 포트폴리오의 취약점을 분석해주십시오.*

**1. 자산 배분 스트레스 테스트 (Asset Allocation Stress Test):**
   - **시나리오:** 가상의 시장 붕괴(예: 글로벌 증시 -20% 급락)가 발생했다고 가정했을 때, 현재 자산 배분의 예상 최대 낙폭(MDD)은 어느 수준이며, 보유 현금은 이를 방어하고 추가 매수 기회로 활용하기에 충분한가?

**2. 집중 투자 리스크 분석 (Concentration Risk Analysis):**
   - **시나리오:** `투자_노트.csv`를 기준으로 가장 비중이 높은 섹터(예: 반도체)에 대한 **가장 비관적인 뉴스(예: 특정 국가의 수출 통제 강화)**가 발생했다고 가정했을 때, 해당 섹터의 급락이 포트폴리오 전체에 미치는 파급 효과와 연쇄적인 손실 규모는 어느 정도인가?

**3. 숨겨진 상관관계 분석 (Hidden Correlation Analysis):**
   - **시나리오:** 표면적으로는 다른 산업의 종목처럼 보이지만, 실제로는 동일한 리스크(예: TSMC 공급망 의존, 특정 원자재 가격 급등)에 노출되어 있는 **'숨겨진 클러스터'**가 존재하는가? 이 공통 리스크가 현실화될 경우, 분산 효과가 사라지면서 예상보다 큰 손실이 발생할 가능성은 없는가?

**4. '신념과 비중의 불일치' 리스크 (Conviction-Weighting Mismatch Risk):**
   - `투자_노트.csv`와 `포트폴리오_현황.csv`를 비교하여, 신념과 비중의 불일치로 인해 발생할 수 있는 가장 큰 리스크는 무엇인가?
   - **(예시 1)** 확신도 '하(Low)'인 종목의 비중이 높아, 예상치 못한 악재 발생 시 큰 손실과 함께 **'잘못된 의사결정에 대한 후회'**라는 심리적 타격을 줄 가능성.
   - **(예시 2)** 확신도 '상(High)'인 종목의 비중이 너무 낮아, 해당 종목이 급등할 경우 **'기회를 놓친 것에 대한 아쉬움'**으로 인해 추격 매수와 같은 비합리적인 결정을 내릴 가능성.

## **결과물 요구사항:**

### **1. 리스크 진단 요약 (Risk Diagnosis Summary)**
- **종합 취약성 등급 (Vulnerability Rating):** 포트폴리오의 전반적인 위기 대응 능력을 A(매우 견고), B(양호), C(보완 필요), D(취약) 등급으로 평가하고 그 이유를 요약할 것.
- **가장 치명적인 취약점 (Single Point of Failure):** 위 4가지 테스트 결과 중, 현재 포트폴리오의 안정성을 가장 크게 위협하는 단 하나의 핵심 취약점은 무엇인지 명확히 짚어줄 것.

### **2. 리스크 완화 계획 (Risk Mitigation Plan)**
- 진단된 취약점을 보완하기 위한 구체적인 리스크 관리 방안을 우선순위 순으로 2~3가지 제안할 것.
- **(예시)** "1. 숨겨진 반도체 공급망 리스크 완화를 위해, 非TSMC 의존도가 높은 B종목을 일부 편입하여 기술주 내 리스크를 분산시키는 전략을 고려하십시오."

### **3. 핵심 리스크 지표 (Key Risk Indicators, KRIs)**
- 향후 포트폴리오의 위험 수준을 가늠하기 위해 주기적으로 추적해야 할 가장 중요한 데이터 지표 3가지를 제시할 것.
- **(예시)** "1. 포트폴리오 상위 3개 종목의 비중 합계, 2. 특정 섹터의 비중, 3. 포트폴리오 전체의 변동성(Beta)"
"""
        
        return master_prompt_template.strip()


def main():
    """테스트용 메인 함수"""
    print("🧪 포트폴리오 정밀 진단기 테스트")
    print("=" * 50)
    
    generator = PortfolioDiagnosisGenerator()
    
    print("📊 포트폴리오 진단 프롬프트 생성 중...")
    prompt = generator.generate_diagnosis_prompt()
    print(f"✅ 프롬프트 생성 완료 (길이: {len(prompt)}자)")
    print(f"📝 프롬프트 미리보기:\n{prompt[:300]}...")
    
    print("\n✅ 테스트가 완료되었습니다!")


if __name__ == "__main__":
    main()
